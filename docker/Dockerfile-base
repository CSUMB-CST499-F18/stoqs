#####################################################################
# NOTE: preliminary, see README.md
#####################################################################

FROM centos:7

MAINTAINER Carlos Rueda <carueda@mbari.org>

# Disable SELinux
# Failed on the centos:7 image ... TODO look at this again
#RUN sed -i 's/SELINUX=enforcing/SELINUX=disabled/' /etc/selinux/config &&\
#    mkdir /selinux &&\
#    echo 0 > /selinux/enforce

# Add epel, remi, and postgres repositories
RUN yum makecache fast &&\
    yum -y install wget git &&\
    yum -y install epel-release &&\
    yum -y update epel-release &&\
    yum repolist &&\
    wget -q -N http://rpms.famillecollet.com/enterprise/remi-release-7.rpm &&\
    rpm -Uvh remi-release-7*.rpm &&\
    wget -q -N http://yum.postgresql.org/9.4/redhat/rhel-7-x86_64/pgdg-centos94-9.4-3.noarch.rpm &&\
    rpm -ivh pgdg* &&\
    yum groupinstall -y "Development Tools"

# Install Python 2.7 and its support tools pip and virtalenv
RUN yum install -y zlib-devel openssl-devel sqlite-devel bzip2-devel xz-libs &&\
    wget -q -N http://www.python.org/ftp/python/2.7.9/Python-2.7.9.tar.xz &&\
    xz -d -c Python-2.7.9.tar.xz | tar -xvf - &&\
    cd Python-2.7.9 &&\
    ./configure &&\
    make && make altinstall &&\
    cd .. &&\
    wget -q --no-check-certificate -N https://pypi.python.org/packages/source/s/setuptools/setuptools-1.4.2.tar.gz &&\
    tar -xvf setuptools-1.4.2.tar.gz &&\
    cd setuptools-1.4.2 &&\
    /usr/local/bin/python2.7 setup.py install &&\
    cd .. &&\
    curl -sS https://bootstrap.pypa.io/get-pip.py | /usr/local/bin/python2.7 - > /dev/null &&\
    /usr/local/bin/pip install virtualenv

# Build and install geos
RUN echo '/usr/local/lib' >> /etc/ld.so.conf &&\
    wget -q -N http://download.osgeo.org/geos/geos-3.6.0.tar.bz2 &&\
    tar -xjf geos-3.6.0.tar.bz2 &&\
    cd geos-3.6.0 &&\
    ./configure &&\
    make -j 2 && make install &&\
    ldconfig &&\
    cd ..

# Build and install gdal
RUN wget -q -N http://download.osgeo.org/gdal/2.1.2/gdal-2.1.2.tar.gz &&\
    tar -xzf gdal-2.1.2.tar.gz &&\
    cd gdal-2.1.2 &&\
    export PATH=$(pwd):$PATH &&\
    ./configure --prefix=/usr/local &&\
    gmake -j 2 && gmake install &&\
    cd ..

# Build and install NetCDF4
RUN yum -y install curl-devel hdf5 hdf5-devel &&\
    wget ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-4.4.1.tar.gz &&\
    tar -xzf netcdf-4.4.1.tar.gz &&\
    cd netcdf-4.4.1 &&\
    ./configure &&\
    make -j 2 && make install &&\
    cd .. &&\
    export LD_LIBRARY_PATH=/usr/local/lib &&\
    wget ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-fortran-4.4.4.tar.gz &&\
    tar -xzf netcdf-fortran-4.4.4.tar.gz &&\
    cd netcdf-fortran-4.4.4 &&\
    ./configure &&\
    make -j 2 && make install &&\
    cd ..


# postgres  (Temporarily included here but should belong to a separate image..)
RUN yum -y install postgresql94-server &&\
    yum -y groupinstall "PostgreSQL Database Server 9.4 PGDG"

# Put geckodriver in /usr/local/bin
RUN pushd /usr/local/bin &&\
    wget -q -N https://github.com/mozilla/geckodriver/releases/download/v0.11.1/geckodriver-v0.11.1-linux64.tar.gz &&\
    tar -xzf geckodriver-v0.11.1-linux64.tar.gz &&\
    popd

RUN yum -y install deltarpm rabbitmq-server scipy mod_wsgi memcached python-memcached &&\
    yum -y install graphviz-devel graphviz-python ImageMagick postgis2_94 &&\
    yum -y install freetype-devel libpng-devel giflib-devel libjpeg-devel gd-devel proj-devel &&\
    yum -y install proj-nad proj-epsg libxml2-devel libxslt-devel pam-devel readline-devel &&\
    yum -y install python-psycopg2 libpqxx-devel hdf hdf-devel freetds-devel postgresql-devel &&\
    yum -y install gdal-python mapserver mapserver-python libxml2 libxml2-python python-lxml python-pip python-devel gcc mlocate &&\
    yum -y install scipy blas blas-devel lapack lapack-devel lvm2 firefox &&\
    yum -y groups install "GNOME Desktop" &&\
    yum -y install fftw-devel motif-devel ghc-OpenGL-devel &&\
    yum -y install freeglut luajit &&\
    wget http://doc.instantreality.org/media/uploads/downloads/2.8.0/InstantReality-RedHat-7-x64-2.8.0.38619.rpm &&\
    rpm -Uvh InstantReality-RedHat-7-x64-2.8.0.38619.rpm

# Download and install CMake
RUN wget -q -N http://www.cmake.org/files/v2.8/cmake-2.8.12.2.tar.gz &&\
    tar -xzf cmake-2.8.12.2.tar.gz &&\
    cd cmake-2.8.12.2 &&\
    ./configure --prefix=/opt/cmake &&\
    gmake -j 2 && gmake install &&\
    cd ..

# Build and install GMT
RUN wget -q -N ftp://ftp.iris.washington.edu/pub/gmt/gmt-5.3.1-src.tar.gz &&\
    tar -xzf gmt-5.3.1-src.tar.gz &&\
    cd gmt-5.3.1 &&\
    cp cmake/ConfigUserTemplate.cmake cmake/ConfigUser.cmake &&\
    mkdir build &&\
    cd build &&\
    /opt/cmake/bin/cmake -DCMAKE_INSTALL_PREFIX=/usr/local -DCMAKE_BUILD_TYPE=RelWithDebInfo .. &&\
    make -j 2 && make install &&\
    cd ../..

# Build and install OSU Tidal Prediction Software
RUN pushd /usr/local &&\
    wget -q -N ftp://ftp.oce.orst.edu/dist/tides/OTPS2.tar.Z &&\
    tar -xzf OTPS2.tar.Z &&\
    cd /usr/local/OTPS2 &&\
    wget -q -N ftp://ftp.oce.orst.edu/dist/tides/TPXO8_compact/tpxo8_atlas_compact_v1.tar.Z &&\
    tar -xzf tpxo8_atlas_compact_v1.tar.Z &&\
    make extract_HC &&\
    make predict_tide &&\
    cp setup.inp setup.inp.bak &&\
    echo "\
DATA/Model_atlas_v1        ! 1. tidal model control file\n\
lat_lon_time               ! 2. latitude/longitude/<time> file\n\
z                          ! 3. z/U/V/u/v\n\
m2,s2                      ! 4. tidal constituents to include\n\
AP                         ! 5. AP/RI\n\
oce                        ! 6. oce/geo\n\
1                          ! 7. 1/0 correct for minor constituents\n\
sample.out                 ! 8. output file (ASCII)\n" > setup.inp &&\
    cp DATA/Model_atlas_v1 DATA/Model_atlas_v1.bak &&\
    echo "\
/usr/local/OTPS2/DATA/hf.tpxo8_atlas_30_v1\n\
/usr/local/OTPS2/DATA/uv.tpxo8_atlas_30_v1\n\
/usr/local/OTPS2/DATA/grid_tpxo8atlas_30_v1" > DATA/Model_atlas_v1 &&\
    popd

# Build and install MB-System, setting overcommit_memory to wizardry mode
# Not including:
#    echo 1 > /proc/sys/vm/overcommit_memory
# due to: bash: /proc/sys/vm/overcommit_memory: Read-only file system
RUN wget -q -N ftp://ftp.ldeo.columbia.edu/pub/MB-System/mbsystem-5.5.2284.tar.gz &&\
    tar -xzf mbsystem-5.5.2284.tar.gz &&\
    cd mbsystem-5.5.2284/ &&\
    ./configure --with-otps-dir=/usr/local/OTPS2 &&\
    make -j 2 && make install &&\
    cd ..

# Build and install Mapserver
RUN wget -q -N http://download.osgeo.org/mapserver/mapserver-6.4.1.tar.gz &&\
    tar xzf mapserver-6.4.1.tar.gz &&\
    cd mapserver-6.4.1 &&\
    mkdir build &&\
    cd build &&\
    /opt/cmake/bin/cmake .. -DWITH_FRIBIDI=0 -DWITH_CAIRO=0 -DWITH_FCGI=0 -DCMAKE_PREFIX_PATH="/usr/local;/usr/pgsql-9.4" &&\
    make -j 2 && make install &&\
    cp /usr/local/bin/mapserv /var/www/cgi-bin &&\
    ldconfig &&\
    cp /etc/sysconfig/httpd /etc/sysconfig/httpd.bak &&\
    echo "\
# Needed for mapserv in /var/www/cgi-bin\n\
LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib64\n\
export LD_LIBRARY_PATH" >> /etc/sysconfig/httpd &&\
    cd ../.. &&\
    touch /tmp/mapserver_stoqshg.log &&\
    chown apache.apache /tmp/mapserver_stoqshg.log &&\
    chmod go+w /tmp/mapserver_stoqshg.log

# Build database for locate command
RUN updatedb

